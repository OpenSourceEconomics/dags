[project]
name = "dags"
description = "Tools to create executable dags from interdependent functions."
requires-python = ">=3.7"
dynamic = ["version"]
dependencies = [
    "networkx",
    "flatten-dict",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: MIT License",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Utilities"
]
authors = [
    {name = "JanoÅ› Gabler", email = "janos.gabler@gmail.com"},
    {name = "Tobias Raabe"}
]
maintainers = [
    {name = "Hans-Martin von Gaudecker", email = "hmgaudecker@uni-bonn.de" }
]


[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.license]
file = "LICENSE"

[project.urls]
Repository = "https://github.com/OpenSourceEconomics/dags"
Github = "https://github.com/OpenSourceEconomics/dags"
Tracker = "https://github.com/OpenSourceEconomics/dags/issues"


# ======================================================================================
# Build system configuration
# ======================================================================================

[build-system]
requires = ["hatchling", "hatch_vcs"]
build-backend = "hatchling.build"

[tool.hatch.build.hooks.vcs]
version-file = "src/dags/_version.py"

[tool.hatch.build.targets.sdist]
exclude = ["tests"]
only-packages = true

[tool.hatch.build.targets.wheel]
only-include = ["src"]
sources = ["src"]

[tool.hatch.version]
source = "vcs"

[tool.hatch.metadata]
allow-direct-references = true


# ======================================================================================
# Pixi
# ======================================================================================

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["linux-64", "osx-64", "osx-arm64", "win-64"]

# Development Dependencies
# --------------------------------------------------------------------------------------

[tool.pixi.dependencies]
python = ">=3.12,<3.13"
jupyterlab = "*"
pre-commit = "*"

[tool.pixi.pypi-dependencies]
dags = {path = ".", editable = true}
pdbp = "*"

# Features and Tasks
# --------------------------------------------------------------------------------------

[tool.pixi.feature.test.dependencies]
pytest = "*"
pytest-cov = "*"
pytest-xdist = "*"

[tool.pixi.feature.test.tasks]
tests = "pytest tests"
tests-with-cov = "pytest tests --cov-report=xml --cov=./"

# Environments
# --------------------------------------------------------------------------------------

[tool.pixi.environments]
test = {features = ["test"], solve-group = "default"}


# ======================================================================================
# Ruff configuration
# ======================================================================================

[tool.ruff]
target-version = "py37"
fix = true
unsafe-fixes = true

[tool.ruff.lint]
select = ["ALL"]
extend-ignore = [
    # missing type annotation
    "ANN001",

    # missing type annotation for `*args`
    "ANN002",

    # missing type annotation for `**kwargs`
    "ANN003",

    # missing return type annotation for public function
    "ANN201",

    # missing return type annotation for private function
    "ANN202",

    # Missing docstring in public module
    "D100",

    # missing docstring in public function
    "D103",

    # missing docstring in public package
    "D104",

    # exception must not use a string literal
    "EM101",

    # exception must not use an f-string literal
    "EM102",

    # line contains a todo
    "FIX002",

    # Too many arguments to function call
    "PLR0913",

    # Magic value used in comparison
    "PLR2004",

    # use of `assert` detected
    "S101",

    # Rules to be fixed in the future
    # ----------------------------------------------------------------------------------

    "PLR0913",
    "FBT001",
    "FBT002",
    "D205",
    "D401",
    "INP001",

    # Rules ignored to avoid conflict with formatter
    # ----------------------------------------------------------------------------------
    "COM812",
    "ISC001",
]

[tool.ruff.lint.per-file-ignores]
"docs/source/conf.py" = ["INP001", "ERA001", "RUF100"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"


# ======================================================================================
# Pytest configuration
# ======================================================================================

[tool.pytest.ini_options]
markers = [
    "wip: Tests that are work-in-progress.",
    "slow: Tests that take a long time to run and are skipped in continuous integration.",
]
norecursedirs = ["docs"]
addopts = ["--pdbcls=pdbp:Pdb"]


# ======================================================================================
# yamlfix configuration
# ======================================================================================

[tool.yamlfix]
line_length = 88
sequence_style = "block_style"
none_representation = "null"
