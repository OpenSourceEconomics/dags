[project]
name = "dags"
description = "Tools to create executable dags from interdependent functions."
requires-python = ">=3.7"
dynamic = ["version"]
dependencies = [
    "networkx",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: MIT License",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Utilities"
]
authors = [
    {name = "JanoÅ› Gabler", email = "janos.gabler@gmail.com"},
    {name = "Tobias Raabe"}
]
maintainers = [
    {name = "Hans-Martin von Gaudecker", email = "hmgaudecker@uni-bonn.de" }
]


[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.license]
file = "LICENSE"

[project.urls]
Repository = "https://github.com/OpenSourceEconomics/dags"
Github = "https://github.com/OpenSourceEconomics/dags"
Tracker = "https://github.com/OpenSourceEconomics/dags/issues"


# ======================================================================================
# Build system configuration
# ======================================================================================

[build-system]
requires = ["hatchling", "hatch_vcs"]
build-backend = "hatchling.build"

[tool.hatch.build.hooks.vcs]
version-file = "src/dags/_version.py"

[tool.hatch.build.targets.sdist]
exclude = ["tests"]
only-packages = true

[tool.hatch.build.targets.wheel]
only-include = ["src"]
sources = ["src"]

[tool.hatch.version]
source = "vcs"

[tool.hatch.metadata]
allow-direct-references = true


# ======================================================================================
# Ruff configuration
# ======================================================================================

[tool.ruff]
target-version = "py311" # Replace by [project] requires-python = ">=3.11" above
fix = true
unsafe-fixes = false

[tool.ruff.lint]
select = ["ALL"]
extend-ignore = [
    "TRY",  # ignore tryceratops.
    "TCH",  # ignore non-guarded type imports.
    "D407",  # Missing dashed underline after section.
    # Others.
    "RET504",  # unnecessary variable assignment before return.
    "S101",  # raise errors for asserts.
    "B905",  # strict parameter for zip that was implemented in py310.
    "I",  # ignore isort
    "ANN",  # type annotating self
    "FBT",  # flake8-boolean-trap
    "EM",  # flake8-errmsg
    "ANN401",  # flake8-annotate typing.Any
    "COM812",  # trailing comma missing, but black takes care of that
    "D401",  # imperative mood for first line. too many false-positives.
    "SLF001",  # access private members.
    "RET505", # unnecessary else after return.
    "PLR2004", # macgic value used in comparison.
    "INP001", # implicit namespace packages.
    "PLR0913", # too many arguments to function call
    # Temporary
    "D100", # missing docstring in public module
    "D103", # missing docstring in public function
    "D104", # missing docstring in public package
    "D202",
    "D205",
    "D400",
    "D415",
]

[tool.ruff.lint.per-file-ignores]
"docs/source/conf.py" = ["INP001", "ERA001", "RUF100"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"
